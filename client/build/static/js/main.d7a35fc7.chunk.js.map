{"version":3,"sources":["components/AuthorForm.jsx","components/AuthorList.jsx","components/AuthorEdit.jsx","views/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["styles","paper","width","padding","marginLeft","height","backgroundColor","input","marginBottom","margin","button","AuthorForm","props","useState","name","setName","errors","setErrors","className","Paper","elevation","style","to","onSubmit","e","console","log","preventDefault","axios","post","then","res","navigate","catch","err","errorResponse","data","errorArr","Object","keys","key","push","message","map","i","FormControl","variant","TextField","required","id","label","defaultValue","onChange","target","value","Button","type","color","StyledTableCell","withStyles","theme","head","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","useStyles","makeStyles","table","minWidth","AuthorList","author","setAuthor","updatedList","setUpdatedList","classes","useEffect","get","removeFromDom","TableContainer","component","Table","aria-label","TableHead","align","TableBody","scope","_id","onClick","delete","AuthorEdit","put","Main","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d7a35fc7.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {FormControl,Paper,InputLabel,OutlinedInput,Button,TextField } from '@material-ui/core';\nimport '../bootstrap.css';\nimport '../style.css';\nimport { navigate,Link } from '@reach/router';\n\nconst styles = {\n    paper:{\n        width: \"30rem\", padding: \"2rem\",marginLeft:\"23.5rem\",\n        height:\"10rem auto\",backgroundColor:\"lightyellow\"\n    },\n    input: {\n        marginBottom: \"1rem\",margin: \"0.5rem\",width:\"20rem\"\n    },\n    button:{\n        width:\"8rem\", marginLeft:\"6rem\"\n    }\n}\nconst AuthorForm = props =>{\n    const [name, setName] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    const onSubmitHandler = e =>{\n        console.log(\"In OnSubmitHandler\")\n        e.preventDefault();\n        axios.post(\"http://localhost:8000/api/new\",{\n            name,\n        })\n         .then(res => navigate(\"/\"))\n        // .then(res => {\n        //     if(res.data.errors) {\n        //         setErrors(res.data.errors);\n        //     }\n        //     else{\n        //         navigate(\"/\")\n        //     }\n        //     console.log(res)\n        // })\n        // .catch(err=>console.log(\"Error while adding author\",err))\n        .catch(err=>{\n            const errorResponse = err.res.data.errors; // Get the errors from err.response.data\n            const errorArr = []; // Define a temp error array to push the messages in\n            for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n                errorArr.push(errorResponse[key].message)\n            }\n            // Set Errors\n            setErrors(errorArr);\n        })\n    }\n\n    return(\n        <div className=\"container-fluid\">\n            <h1>Favorite Books</h1>\n           <Paper elevation={4} style={styles.paper}>\n               <p><Link to=\"/\">Home </Link> </p>\n               <h3>Add new author</h3>\n                <form onSubmit={onSubmitHandler}>\n                {\n                    errors.map((err,i) => \n                <h4 key={i}>{err}</h4>)\n                }\n                    <FormControl variant=\"outlined\" style={styles.input}>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Required\"\n                            defaultValue=\"Name\"\n                            variant=\"outlined\"\n                            onChange={e=>setName(e.target.value)}\n                        />\n                    </FormControl>\n                    {/* <span className=\"text-danger\">{errors.name ? errors.name.message: \"\" }</span> */}\n                    <FormControl variant=\"outlined\" style={styles.input}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={styles.button}>\n                            Submit\n                        </Button>\n                        <Link to=\"/\"> Cancel </Link>\n                    </FormControl>\n                </form>\n            </Paper>\n        </div>\n    )\n//End of file    \n}\n\nexport default AuthorForm;","import React,{useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {FormControl,Paper,InputLabel,OutlinedInput,Button,TextField } from '@material-ui/core';\nimport '../bootstrap.css';\nimport '../style.css';\nimport { navigate,Link } from '@reach/router';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { red } from '@material-ui/core/colors';\n\nconst styles = {\n    paper:{\n        width: \"34rem\", padding: \"2rem\",marginLeft:\"22.5rem\",\n        height:\"10rem auto\",backgroundColor:\"lightyellow\"\n    },\n    input: {\n        marginBottom: \"1rem\",margin: \"0.5rem\",width:\"20rem\"\n    },\n    button:{\n        width:\"8rem\", marginLeft:\"6rem\"\n    }\n}\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n      width:1\n    },\n    body: {\n      fontSize: 14,\n      \n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n  }))(TableRow);\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 10,\n    },\n\n  });\n\nconst AuthorList = props =>{\n    const [author, setAuthor] = useState([]);\n    const [updatedList, setUpdatedList] = useState(\"\");\n    const classes = useStyles();\n\n    useEffect(() =>{\n        axios.get(\"http://localhost:8000/api\")\n        .then(res=>{\n            setAuthor(res.data);\n            setUpdatedList(!updatedList); \n        })\n        .catch(err=>console.log(\"Something went wrong when fetching all Authors\",err))\n    },[updatedList]);\n\n    const {removeFromDom} = props;\n    const deleteAuthor = _id =>{\n        axios.delete(\"http://localhost:8000/api/\"+_id)\n        .then(res => {\n            removeFromDom(_id)\n        })\n        .catch(err=>console.log(\"something wemt wrong while deleting an author\",err))\n    }\n\n    return(\n        <div className=\"container-fluid\">\n        <h1>Favorite Books</h1>\n       <Paper elevation={4} style={styles.paper}>\n           <p><Link to=\"/\">Home </Link></p>\n           <h6><Link to=\"/new\">Add an author </Link> </h6>\n           <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Author</StyledTableCell>\n            <StyledTableCell align=\"right\">Actions Availble</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n             \n              author.map((author,i) =>\n\n                <StyledTableRow key={i}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                    {author.name}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                    <Link to={\"/edit/\"+author._id}>EDIT </Link> |   \n                    <Button onClick={e => {deleteAuthor(author._id)}} style={{color:\"#007bfe\"}}>Delete</Button>\n                </StyledTableCell>\n                </StyledTableRow>\n               )\n           }\n        </TableBody>\n      </Table>\n    </TableContainer>\n        </Paper>\n    </div>\n    )\n//end of file    \n}\n\nexport default AuthorList;","import React,{useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {FormControl,Paper,InputLabel,OutlinedInput,Button,TextField } from '@material-ui/core';\nimport '../bootstrap.css';\nimport '../style.css';\nimport { navigate,Link } from '@reach/router';\n\nconst styles = {\n    paper:{\n        width: \"30rem\", padding: \"2rem\",marginLeft:\"23.5rem\",\n        height:\"10rem auto\",backgroundColor:\"lightyellow\"\n    },\n    input: {\n        marginBottom: \"1rem\",margin: \"0.5rem\",width:\"20rem\"\n    },\n    button:{\n        width:\"8rem\", marginLeft:\"6rem\"\n    }\n}\nconst AuthorEdit = props =>{\n    const [name, setName] = useState(\"\");\n\n    useEffect(() =>{\n        axios.get(\"http://localhost:8000/api/\"+props.id)\n        .then(res =>{\n            setName(res.data.name)\n            console.log(\"name\"+res.data.name)\n        })\n        .catch(err=>console.log(\"Something went wrong while editing author\",err))\n    },[props.id])\n\n    const onSubmitHandler = e =>{\n        console.log(\"In OnSubmitHandler\")\n        e.preventDefault();\n        axios.put(\"http://localhost:8000/api/\"+props.id,{\n            name,\n        })\n        .then(res => navigate(\"/\"))\n        .catch(err=>console.log(\"Error while editing author\",err))\n    }\n\n    return(\n        <div className=\"container-fluid\">\n            <h1>Favorite Books</h1>\n           <Paper elevation={4} style={styles.paper}>\n               <p><Link to=\"/\">Home </Link> </p>\n               <h3>Edit this author</h3>\n                <form onSubmit={onSubmitHandler}>\n                    <FormControl variant=\"outlined\" style={styles.input}>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Required\"\n                         \n                            variant=\"outlined\"\n                            onChange={e=>setName(e.target.value)}\n                            value={name}\n                        />\n                    </FormControl>\n                    <FormControl variant=\"outlined\" style={styles.input}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={styles.button}>\n                            Submit\n                        </Button>\n                        <Link to=\"/\"> Cancel </Link>\n                    </FormControl>\n                </form>\n            </Paper>\n        </div>\n    )\n//End of file    \n}\n\nexport default AuthorEdit;","import React from 'react';\nimport AuthorForm from '../components/AuthorForm';\nimport AuthorList from '../components/AuthorList';\nimport AuthorEdit from '../components/AuthorEdit';\nimport { Router, Link } from '@reach/router';\nconst Main = props =>{\n    return(\n        <Router>\n            <AuthorForm path=\"new\"/>\n            <AuthorList path=\"/\"/>\n            <AuthorEdit path=\"/edit/:id\" />\n        </Router>\n\n    )\n}\n\nexport default Main;","import React from 'react';\nimport Main from './views/Main'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}